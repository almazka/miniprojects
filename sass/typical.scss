********************************
***** Typical construction *****
********************************

********************************
****** Спрайты одинаковые ******
********************************
i {
display: block;
cursor: pointer;
height: 30px;
width: 35px;
}
&:nth-of-type(1) i {
	@extend .sprite-phone;
}
&:nth-of-type(2) i {
	@extend .sprite-place;
}
&:nth-of-type(3) i {
	@extend .sprite-mail;
}

********************************
******* Спрайт одиночный *******
********************************
Сниппет spone

i {
	@extend .sprite-place;
	width: 25px;
	height: 34px;
}

********************************
******** Спрайты разные ********
********************************

div {
	position: relative;
	i {
		display: block;
		cursor: pointer;
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		margin: auto;
	}
}

/********************************
**** Вложеные дивы с лефтом ****
********************************/
Сниппет divs

.lol {
	& div[class^="lol"]:nth-of-type(1) {
		float: left;
	}
	& div[class^="lol"]:nth-of-type(2) {
		float: right;
	}
}

/********************************
********* Слайдер Slick *********
********************************/
Подключаем через фетч

Минимальная структура:
<div class="yourclass">
	<div class="slide"></div>
	<div class="slide"></div>
	<div class="slide"></div>
</div>

В html
<script src="js/slick.min.js"></script>

В style.sass
@import url(../css/slick.css);
Под вопросом - @import url(../css/slick-theme.css);

/********************************
******* Слайдер BX Slider *******
********************************/
Подключаем через фетч. На данный момент лучший для меня.

Структура:
<ul class="yourclass">
	<li class="yourslideclass"></li>
	<li class="yourslideclass"></li>
	<li class="yourslideclass"></li>
</ul>

В html
<script type="text/javascript" src="js/jquery.bxslider.min.js"></script>

/********************************
********* Фильтр блоков *********
********************************/
Плагин фильтра Quicksand
Подключаем через Фетч

Минимальная структура:
<div id="filter">
</div>
<div id="container">
	<ul id="stage">
		<li data-tags="Web, Print, Photography, Animation">
			<img src="img/gallery1.jpg" alt="Business Cards">
		</li>
	</ul>
</div>

В файл style.sass:
#container ul.hidden{
	display:none;
}

В html
<script type="text/javascript" src="js/jquery.quicksand-1.4.js"></script>

С кнопками переключения 2 варианта в toscript - либо просто a-шки, либо li>a

/********************************
************ MixItUp ************
********************************/
Через Fetch
Нормальный плагин фильтрации. Много фишечек тоже. На днный момент - мой фаворит
Структура. Любая, лишь бы у летающего элемента был class="mix  category-1  category-2  category-3"
Вместо button и div мб что угодно, li-шки, не вопрос. Для примера:

<div id="Container">
    <div class="mix category-1" data-my-order="1"> ... </div>
    <div class="mix category-1" data-my-order="2"> ... </div>
    <div class="mix category-2" data-my-order="3"> ... </div>
    <div class="mix category-2" data-my-order="4"> ... </div>
</div>

Прописываем сами названия категорий в порядке, каком нам надо:
<button class="filter" data-filter=".category-1">Category 1</button>
<button class="filter" data-filter=".category-2">Category 2</button>

Можно автоматический переключатель поставить list-grid
<button class="sort" data-sort="my-order:asc">Ascending Order</button>
<button class="sort" data-sort="my-order:desc">Descending Order</button>

В CSS прописать
#Container .mix{
    display: none;
}

HTML
<script type="text/javascript" src="js/jquery.mixitup.min.js"></script>


/********************************
***** Всплывающие подсказки *****
********************************/
Без Фетча
Напоминалка структура ссылки, по которой вызывается
<i title="text tooltip" rel="tooltip"></i>
Сама структура тултипа любая, через что угодно, регулируется в js, главное, чтобы он был абсолютом

Там никаких файлов подключать спецом не надо. Код в jquery вставляем следующий и все:
/*tooltip*/
if ($('[rel~=tooltip]').length > 0){
var targets = $( '[rel~=tooltip]' ),
	target	= false,
	tooltip = false,
	title	= false;

targets.bind( 'mouseenter', function()
{
	target	= $( this );
	tip		= '<i>'+target.attr( 'title' )+'</i>'+'<b></b>';
	tooltip	= $( '<span class="modal"></span>' );

	if( !tip || tip == '' )
		return false;

	target.removeAttr( 'title' );
	tooltip.css( 'opacity', 0 )
		   .html( tip )
		   .appendTo( 'body' );

	var init_tooltip = function()
	{
		if( $( window ).width() < tooltip.outerWidth() * 1.5 )
			tooltip.css( 'max-width', $( window ).width() / 2 );
		else
			tooltip.css( 'max-width', 340 );

		var pos_left = target.offset().left + ( target.outerWidth() / 2 ) - ( tooltip.outerWidth() / 2 ),
			pos_top	 = target.offset().top - tooltip.outerHeight() - 40;

		if( pos_left < 0 )
		{
			pos_left = target.offset().left + target.outerWidth() / 2 - 20;
			tooltip.addClass( 'left' );
		}
		else
			tooltip.removeClass( 'left' );

		if( pos_left + tooltip.outerWidth() > $( window ).width() )
		{
			pos_left = target.offset().left - tooltip.outerWidth() + target.outerWidth() / 2 + 20;
			tooltip.addClass( 'right' );
		}
		else
			tooltip.removeClass( 'right' );

		if( pos_top < 0 )
		{
			var pos_top	 = target.offset().top + target.outerHeight();
			tooltip.addClass( 'top' );
		}
		else
			tooltip.removeClass( 'top' );

		tooltip.css( { left: pos_left, top: pos_top } )
			   .animate( { top: '+=10', opacity: 1 }, 50 );
	};

	init_tooltip();
	$( window ).resize( init_tooltip );

	var remove_tooltip = function()
	{
		tooltip.animate( { top: '-=10', opacity: 0 }, 50, function()
		{
			$( this ).remove();
		});

		target.attr( 'title', tip );
	};

	target.bind( 'mouseleave', remove_tooltip );
	tooltip.bind( 'click', remove_tooltip );
});
}
/*end tooltip*/

/********************************
**** Переключатель list-grid ****
********************************/
Без фетча
Все описано здесь - http://jsfiddle.net/v57JF/
Достаточно легко.

/********************************
*********** Colorbox ***********
********************************/
Плагин увеличения изображения
Структура практически любая, главное сделать ссылку, которая ведет на увеличенное изображение. Любой класс можно прописать в js

Подключаем через fetch
В style.sass
@import url(../css/colorbox.css);

В конец html
<script type="text/javascript" src="js/jquery.colorbox-min.js"></script>

Для того, чтобы со стрелками было переключение по группе, указывается rel по классу
$(".group1").colorbox({rel:'group1'});

/********************************
********* PrettyGallery *********
********************************/
Плагин увеличения изображений + галерея и много др фишечек. Лучший на данный момент.
Структура
Практически любая, лишь бы была ссылка, ведущая на изображение с rel-ом и title, можно без
<a href="images/lepestok.jpg" rel="prettyPhoto[gallery]" title="ЦветуЁчек1">

Подключаем через fetch
В style.sass
@import url(../css/prettyPhoto.css);

В конец html
<script type="text/javascript" src="js/jquery.prettyPhoto.js"></script>
